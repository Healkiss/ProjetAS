22/4
/// C ///
Ajout des listes simplements chainées pour chaque type de variables
-Coordonnee
	Avec la variable globale GlobalListeCoor pour les stocker
-Point
	Avec la variable globale GlobalListePoint pour les stocker
-Chemin
	Avec la variable globale GlobalListeChemin pour les stocker
	
Ajout des fonctions necessaires a l'utilisation de liste simplement chainée (ajouter et afficher), seulement pour GlobalListeCoor pour le moment

/// LEX ///
Ajout de trois etats (declaration coordonnée, point, chemin)

/// BISON ///
Essai de caster les $$ en char* pour passer des chaines aux fonctions (au lieu d'un YYSTYPE ) Mais en faisant un simple char * s = $1; tout les texte est pris.

/// DIVERS ///
Couleurs pour la console (differencier message d'erreur, informatif, succes ..)


/// PROBLEMES A RESOUDRE ///
 Ameliorer grammaire pour l'affectation qui n'a pas l'air de fonctionner
Passer des chaines pour par exemple envoyer le nom de la variable et la stocker

/// SUITE ///
Rajouter la gestion des 3 listes, faire une fonction de recherches dans ces listes pour trouver si la variable existe, la modifier ..


5/05
Ajout des coordonnées polaire -> cartesienne a la source (des la construction du point et l'enregistrement)

Generisation des liste, avant on ne pouvait que modifier les listes globals, maintenant il suffit d'envoyer la liste qu'on veut modifier et la recuperer a la sortie de la fonction.
Coordonnée, points marche donc
mais erreurs dans les files pour les chemins, ceux ci s'additionne alors qu'on voudrait les remplacer.


6/05
On peut calculer des chiffres et des variables
On peut affecter des points a des points
Support du niveau de profondeur (pas encore implementé), la variable profondeur sera  incrementé selon la profondeur. Et il faudra affiner les recherches et creer les variables sur la bonne profondeur.
On peut utiliser des variables points dans les chemins. (pour les affecter ou les dessiner)
Passage du int au double -> raté atof, strtod ne renvoi que des valeurs aleatoire et impossible de caster simplement de int vers double pour n'avoir qu'a caster de l'un vers l'autre jusqu'a ce qu'on trouve une solution 

A FAIRE :
Affecter liste a liste et Concatenation de liste (lp '.=' (1,2)--(2,3)) au lieu du comportement actuelle et vider la liste pour la recommencer dans le cas d'un "="


A FAIRE EMILIE:
Couleurs : la fonction dans le c y est(terminé - au debut de function.c), reste a faire le lex(commencée - au milieu des regles lex) et la grammaire(commencée- à la fin des regles bison) reste a faire
SET_COLOR doit etre suivi de :
red
green
blue
alpha
Decalage (translation) (commencé mais pas fini, en tout cas, pas testé)
rotation (aucune idée de ce qu'il aut faire, commencer par les scalaire et les chemin, on verra les images plus tard)

(IMAGES => trouver une façon de proceder, je n'ai aucune idée de quoi faire ..)


7/05
Affectation liste to liste
scalaire int to float
Debut de translate, rotate, couleur
Debut de images
Ajout des commentaire // et /* */
Difficultes: Structure trop complqiué, j'ai pas reussi ame mettre a travailler avec des void* qui aurait allegé nos structure, aidant a l'ajout dans les listes par exemple
Grammaire pas simple,

Il faut faire une seule fonction pour les traitement des points selon l'etat d'affectation ou l'on est
Reste a faire :
FIll
translation, rotate
comparaisoné
Couleur, epaisseur du trait.
