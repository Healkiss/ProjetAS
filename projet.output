Grammar

    0 $accept: input $end

    1 input: input line
    2      | line

    3 $@1: /* empty */

    4 line: commande $@1 liste EOI EOL
    5     | definition EOI EOL
    6     | affectation EOI EOL
    7     | error EOI EOL
    8     | EOL

    9 definition: VAR_COOR list_coor
   10           | VAR_PT list_pt
   11           | VAR_LIST list_list

   12 list_coor: list_coor ',' VAR_NAME_COOR
   13          | VAR_NAME_COOR

   14 list_pt: list_pt ',' VAR_NAME_PT
   15        | VAR_NAME_PT

   16 list_list: list_list ',' VAR_NAME_LIST
   17          | VAR_NAME_LIST

   18 affectation: VAR_NAME_COOR '=' expr

   19 $@2: /* empty */

   20 affectation: VAR_NAME_PT $@2 '=' point

   21 $@3: /* empty */

   22 affectation: VAR_NAME_LIST $@3 '=' liste

   23 commande: DRAW
   24         | FILL
   25         | error

   26 liste: point
   27      | '+' translation
   28      | cycle

   29 $@4: /* empty */

   30 liste: point $@4 SEPARATOR liste
   31      | '+' translation SEPARATOR liste
   32      | cycle SEPARATOR liste

   33 point: '(' expr ',' expr ')'
   34      | '(' expr ':' expr ')'

   35 cycle: CYCLE

   36 translation: '(' expr ',' expr ')'

   37 expr: expr '+' expr
   38     | expr '*' expr
   39     | expr '-' expr
   40     | expr '/' expr
   41     | NB
   42     | '(' expr ')'
   43     | '-' expr


Terminals, with rules where they appear

$end (0) 0
'(' (40) 33 34 36 42
')' (41) 33 34 36 42
'*' (42) 38
'+' (43) 27 31 37
',' (44) 12 14 16 33 36
'-' (45) 39 43
'/' (47) 40
':' (58) 34
'=' (61) 18 20 22
error (256) 7 25
NB (258) 41
DRAW (259) 23
FILL (260) 24
CYCLE (261) 35
SEPARATOR (262) 30 31 32
EOI (263) 4 5 6 7
EOL (264) 4 5 6 7 8
VAR_COOR (265) 9
VAR_PT (266) 10
VAR_LIST (267) 11
VAR_NAME_COOR (268) 12 13 18
VAR_NAME_PT (269) 14 15 20
VAR_NAME_LIST (270) 16 17 22
UMINUS (271)


Nonterminals, with rules where they appear

$accept (26)
    on left: 0
input (27)
    on left: 1 2, on right: 0 1
line (28)
    on left: 4 5 6 7 8, on right: 1 2
$@1 (29)
    on left: 3, on right: 4
definition (30)
    on left: 9 10 11, on right: 5
list_coor (31)
    on left: 12 13, on right: 9 12
list_pt (32)
    on left: 14 15, on right: 10 14
list_list (33)
    on left: 16 17, on right: 11 16
affectation (34)
    on left: 18 20 22, on right: 6
$@2 (35)
    on left: 19, on right: 20
$@3 (36)
    on left: 21, on right: 22
commande (37)
    on left: 23 24 25, on right: 4
liste (38)
    on left: 26 27 28 30 31 32, on right: 4 22 30 31 32
$@4 (39)
    on left: 29, on right: 30
point (40)
    on left: 33 34, on right: 20 26 30
cycle (41)
    on left: 35, on right: 28 32
translation (42)
    on left: 36, on right: 27 31
expr (43)
    on left: 37 38 39 40 41 42 43, on right: 18 33 34 36 37 38 39 40
    42 43


state 0

    0 $accept: . input $end

    error          shift, and go to state 1
    DRAW           shift, and go to state 2
    FILL           shift, and go to state 3
    EOL            shift, and go to state 4
    VAR_COOR       shift, and go to state 5
    VAR_PT         shift, and go to state 6
    VAR_LIST       shift, and go to state 7
    VAR_NAME_COOR  shift, and go to state 8
    VAR_NAME_PT    shift, and go to state 9
    VAR_NAME_LIST  shift, and go to state 10

    input        go to state 11
    line         go to state 12
    definition   go to state 13
    affectation  go to state 14
    commande     go to state 15


state 1

    7 line: error . EOI EOL
   25 commande: error .

    EOI  shift, and go to state 16

    $default  reduce using rule 25 (commande)


state 2

   23 commande: DRAW .

    $default  reduce using rule 23 (commande)


state 3

   24 commande: FILL .

    $default  reduce using rule 24 (commande)


state 4

    8 line: EOL .

    $default  reduce using rule 8 (line)


state 5

    9 definition: VAR_COOR . list_coor

    VAR_NAME_COOR  shift, and go to state 17

    list_coor  go to state 18


state 6

   10 definition: VAR_PT . list_pt

    VAR_NAME_PT  shift, and go to state 19

    list_pt  go to state 20


state 7

   11 definition: VAR_LIST . list_list

    VAR_NAME_LIST  shift, and go to state 21

    list_list  go to state 22


state 8

   18 affectation: VAR_NAME_COOR . '=' expr

    '='  shift, and go to state 23


state 9

   20 affectation: VAR_NAME_PT . $@2 '=' point

    $default  reduce using rule 19 ($@2)

    $@2  go to state 24


state 10

   22 affectation: VAR_NAME_LIST . $@3 '=' liste

    $default  reduce using rule 21 ($@3)

    $@3  go to state 25


state 11

    0 $accept: input . $end
    1 input: input . line

    $end           shift, and go to state 26
    error          shift, and go to state 1
    DRAW           shift, and go to state 2
    FILL           shift, and go to state 3
    EOL            shift, and go to state 4
    VAR_COOR       shift, and go to state 5
    VAR_PT         shift, and go to state 6
    VAR_LIST       shift, and go to state 7
    VAR_NAME_COOR  shift, and go to state 8
    VAR_NAME_PT    shift, and go to state 9
    VAR_NAME_LIST  shift, and go to state 10

    line         go to state 27
    definition   go to state 13
    affectation  go to state 14
    commande     go to state 15


state 12

    2 input: line .

    $default  reduce using rule 2 (input)


state 13

    5 line: definition . EOI EOL

    EOI  shift, and go to state 28


state 14

    6 line: affectation . EOI EOL

    EOI  shift, and go to state 29


state 15

    4 line: commande . $@1 liste EOI EOL

    $default  reduce using rule 3 ($@1)

    $@1  go to state 30


state 16

    7 line: error EOI . EOL

    EOL  shift, and go to state 31


state 17

   13 list_coor: VAR_NAME_COOR .

    $default  reduce using rule 13 (list_coor)


state 18

    9 definition: VAR_COOR list_coor .
   12 list_coor: list_coor . ',' VAR_NAME_COOR

    ','  shift, and go to state 32

    $default  reduce using rule 9 (definition)


state 19

   15 list_pt: VAR_NAME_PT .

    $default  reduce using rule 15 (list_pt)


state 20

   10 definition: VAR_PT list_pt .
   14 list_pt: list_pt . ',' VAR_NAME_PT

    ','  shift, and go to state 33

    $default  reduce using rule 10 (definition)


state 21

   17 list_list: VAR_NAME_LIST .

    $default  reduce using rule 17 (list_list)


state 22

   11 definition: VAR_LIST list_list .
   16 list_list: list_list . ',' VAR_NAME_LIST

    ','  shift, and go to state 34

    $default  reduce using rule 11 (definition)


state 23

   18 affectation: VAR_NAME_COOR '=' . expr

    NB   shift, and go to state 35
    '-'  shift, and go to state 36
    '('  shift, and go to state 37

    expr  go to state 38


state 24

   20 affectation: VAR_NAME_PT $@2 . '=' point

    '='  shift, and go to state 39


state 25

   22 affectation: VAR_NAME_LIST $@3 . '=' liste

    '='  shift, and go to state 40


state 26

    0 $accept: input $end .

    $default  accept


state 27

    1 input: input line .

    $default  reduce using rule 1 (input)


state 28

    5 line: definition EOI . EOL

    EOL  shift, and go to state 41


state 29

    6 line: affectation EOI . EOL

    EOL  shift, and go to state 42


state 30

    4 line: commande $@1 . liste EOI EOL

    CYCLE  shift, and go to state 43
    '+'    shift, and go to state 44
    '('    shift, and go to state 45

    liste  go to state 46
    point  go to state 47
    cycle  go to state 48


state 31

    7 line: error EOI EOL .

    $default  reduce using rule 7 (line)


state 32

   12 list_coor: list_coor ',' . VAR_NAME_COOR

    VAR_NAME_COOR  shift, and go to state 49


state 33

   14 list_pt: list_pt ',' . VAR_NAME_PT

    VAR_NAME_PT  shift, and go to state 50


state 34

   16 list_list: list_list ',' . VAR_NAME_LIST

    VAR_NAME_LIST  shift, and go to state 51


state 35

   41 expr: NB .

    $default  reduce using rule 41 (expr)


state 36

   43 expr: '-' . expr

    NB   shift, and go to state 35
    '-'  shift, and go to state 36
    '('  shift, and go to state 37

    expr  go to state 52


state 37

   42 expr: '(' . expr ')'

    NB   shift, and go to state 35
    '-'  shift, and go to state 36
    '('  shift, and go to state 37

    expr  go to state 53


state 38

   18 affectation: VAR_NAME_COOR '=' expr .
   37 expr: expr . '+' expr
   38     | expr . '*' expr
   39     | expr . '-' expr
   40     | expr . '/' expr

    '+'  shift, and go to state 54
    '-'  shift, and go to state 55
    '*'  shift, and go to state 56
    '/'  shift, and go to state 57

    $default  reduce using rule 18 (affectation)


state 39

   20 affectation: VAR_NAME_PT $@2 '=' . point

    '('  shift, and go to state 45

    point  go to state 58


state 40

   22 affectation: VAR_NAME_LIST $@3 '=' . liste

    CYCLE  shift, and go to state 43
    '+'    shift, and go to state 44
    '('    shift, and go to state 45

    liste  go to state 59
    point  go to state 47
    cycle  go to state 48


state 41

    5 line: definition EOI EOL .

    $default  reduce using rule 5 (line)


state 42

    6 line: affectation EOI EOL .

    $default  reduce using rule 6 (line)


state 43

   35 cycle: CYCLE .

    $default  reduce using rule 35 (cycle)


state 44

   27 liste: '+' . translation
   31      | '+' . translation SEPARATOR liste

    '('  shift, and go to state 60

    translation  go to state 61


state 45

   33 point: '(' . expr ',' expr ')'
   34      | '(' . expr ':' expr ')'

    NB   shift, and go to state 35
    '-'  shift, and go to state 36
    '('  shift, and go to state 37

    expr  go to state 62


state 46

    4 line: commande $@1 liste . EOI EOL

    EOI  shift, and go to state 63


state 47

   26 liste: point .
   30      | point . $@4 SEPARATOR liste

    SEPARATOR  reduce using rule 29 ($@4)
    $default   reduce using rule 26 (liste)

    $@4  go to state 64


state 48

   28 liste: cycle .
   32      | cycle . SEPARATOR liste

    SEPARATOR  shift, and go to state 65

    $default  reduce using rule 28 (liste)


state 49

   12 list_coor: list_coor ',' VAR_NAME_COOR .

    $default  reduce using rule 12 (list_coor)


state 50

   14 list_pt: list_pt ',' VAR_NAME_PT .

    $default  reduce using rule 14 (list_pt)


state 51

   16 list_list: list_list ',' VAR_NAME_LIST .

    $default  reduce using rule 16 (list_list)


state 52

   37 expr: expr . '+' expr
   38     | expr . '*' expr
   39     | expr . '-' expr
   40     | expr . '/' expr
   43     | '-' expr .

    $default  reduce using rule 43 (expr)


state 53

   37 expr: expr . '+' expr
   38     | expr . '*' expr
   39     | expr . '-' expr
   40     | expr . '/' expr
   42     | '(' expr . ')'

    '+'  shift, and go to state 54
    '-'  shift, and go to state 55
    '*'  shift, and go to state 56
    '/'  shift, and go to state 57
    ')'  shift, and go to state 66


state 54

   37 expr: expr '+' . expr

    NB   shift, and go to state 35
    '-'  shift, and go to state 36
    '('  shift, and go to state 37

    expr  go to state 67


state 55

   39 expr: expr '-' . expr

    NB   shift, and go to state 35
    '-'  shift, and go to state 36
    '('  shift, and go to state 37

    expr  go to state 68


state 56

   38 expr: expr '*' . expr

    NB   shift, and go to state 35
    '-'  shift, and go to state 36
    '('  shift, and go to state 37

    expr  go to state 69


state 57

   40 expr: expr '/' . expr

    NB   shift, and go to state 35
    '-'  shift, and go to state 36
    '('  shift, and go to state 37

    expr  go to state 70


state 58

   20 affectation: VAR_NAME_PT $@2 '=' point .

    $default  reduce using rule 20 (affectation)


state 59

   22 affectation: VAR_NAME_LIST $@3 '=' liste .

    $default  reduce using rule 22 (affectation)


state 60

   36 translation: '(' . expr ',' expr ')'

    NB   shift, and go to state 35
    '-'  shift, and go to state 36
    '('  shift, and go to state 37

    expr  go to state 71


state 61

   27 liste: '+' translation .
   31      | '+' translation . SEPARATOR liste

    SEPARATOR  shift, and go to state 72

    $default  reduce using rule 27 (liste)


state 62

   33 point: '(' expr . ',' expr ')'
   34      | '(' expr . ':' expr ')'
   37 expr: expr . '+' expr
   38     | expr . '*' expr
   39     | expr . '-' expr
   40     | expr . '/' expr

    '+'  shift, and go to state 54
    '-'  shift, and go to state 55
    '*'  shift, and go to state 56
    '/'  shift, and go to state 57
    ','  shift, and go to state 73
    ':'  shift, and go to state 74


state 63

    4 line: commande $@1 liste EOI . EOL

    EOL  shift, and go to state 75


state 64

   30 liste: point $@4 . SEPARATOR liste

    SEPARATOR  shift, and go to state 76


state 65

   32 liste: cycle SEPARATOR . liste

    CYCLE  shift, and go to state 43
    '+'    shift, and go to state 44
    '('    shift, and go to state 45

    liste  go to state 77
    point  go to state 47
    cycle  go to state 48


state 66

   42 expr: '(' expr ')' .

    $default  reduce using rule 42 (expr)


state 67

   37 expr: expr . '+' expr
   37     | expr '+' expr .
   38     | expr . '*' expr
   39     | expr . '-' expr
   40     | expr . '/' expr

    '*'  shift, and go to state 56
    '/'  shift, and go to state 57

    $default  reduce using rule 37 (expr)


state 68

   37 expr: expr . '+' expr
   38     | expr . '*' expr
   39     | expr . '-' expr
   39     | expr '-' expr .
   40     | expr . '/' expr

    '*'  shift, and go to state 56
    '/'  shift, and go to state 57

    $default  reduce using rule 39 (expr)


state 69

   37 expr: expr . '+' expr
   38     | expr . '*' expr
   38     | expr '*' expr .
   39     | expr . '-' expr
   40     | expr . '/' expr

    $default  reduce using rule 38 (expr)


state 70

   37 expr: expr . '+' expr
   38     | expr . '*' expr
   39     | expr . '-' expr
   40     | expr . '/' expr
   40     | expr '/' expr .

    $default  reduce using rule 40 (expr)


state 71

   36 translation: '(' expr . ',' expr ')'
   37 expr: expr . '+' expr
   38     | expr . '*' expr
   39     | expr . '-' expr
   40     | expr . '/' expr

    '+'  shift, and go to state 54
    '-'  shift, and go to state 55
    '*'  shift, and go to state 56
    '/'  shift, and go to state 57
    ','  shift, and go to state 78


state 72

   31 liste: '+' translation SEPARATOR . liste

    CYCLE  shift, and go to state 43
    '+'    shift, and go to state 44
    '('    shift, and go to state 45

    liste  go to state 79
    point  go to state 47
    cycle  go to state 48


state 73

   33 point: '(' expr ',' . expr ')'

    NB   shift, and go to state 35
    '-'  shift, and go to state 36
    '('  shift, and go to state 37

    expr  go to state 80


state 74

   34 point: '(' expr ':' . expr ')'

    NB   shift, and go to state 35
    '-'  shift, and go to state 36
    '('  shift, and go to state 37

    expr  go to state 81


state 75

    4 line: commande $@1 liste EOI EOL .

    $default  reduce using rule 4 (line)


state 76

   30 liste: point $@4 SEPARATOR . liste

    CYCLE  shift, and go to state 43
    '+'    shift, and go to state 44
    '('    shift, and go to state 45

    liste  go to state 82
    point  go to state 47
    cycle  go to state 48


state 77

   32 liste: cycle SEPARATOR liste .

    $default  reduce using rule 32 (liste)


state 78

   36 translation: '(' expr ',' . expr ')'

    NB   shift, and go to state 35
    '-'  shift, and go to state 36
    '('  shift, and go to state 37

    expr  go to state 83


state 79

   31 liste: '+' translation SEPARATOR liste .

    $default  reduce using rule 31 (liste)


state 80

   33 point: '(' expr ',' expr . ')'
   37 expr: expr . '+' expr
   38     | expr . '*' expr
   39     | expr . '-' expr
   40     | expr . '/' expr

    '+'  shift, and go to state 54
    '-'  shift, and go to state 55
    '*'  shift, and go to state 56
    '/'  shift, and go to state 57
    ')'  shift, and go to state 84


state 81

   34 point: '(' expr ':' expr . ')'
   37 expr: expr . '+' expr
   38     | expr . '*' expr
   39     | expr . '-' expr
   40     | expr . '/' expr

    '+'  shift, and go to state 54
    '-'  shift, and go to state 55
    '*'  shift, and go to state 56
    '/'  shift, and go to state 57
    ')'  shift, and go to state 85


state 82

   30 liste: point $@4 SEPARATOR liste .

    $default  reduce using rule 30 (liste)


state 83

   36 translation: '(' expr ',' expr . ')'
   37 expr: expr . '+' expr
   38     | expr . '*' expr
   39     | expr . '-' expr
   40     | expr . '/' expr

    '+'  shift, and go to state 54
    '-'  shift, and go to state 55
    '*'  shift, and go to state 56
    '/'  shift, and go to state 57
    ')'  shift, and go to state 86


state 84

   33 point: '(' expr ',' expr ')' .

    $default  reduce using rule 33 (point)


state 85

   34 point: '(' expr ':' expr ')' .

    $default  reduce using rule 34 (point)


state 86

   36 translation: '(' expr ',' expr ')' .

    $default  reduce using rule 36 (translation)
