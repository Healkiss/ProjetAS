Nonterminals useless in grammar

   coloration


Terminals unused in grammar

   SET_COLOR


Rules useless in grammar

   48 coloration: SET_COLOR


Grammar

    0 $accept: input $end

    1 input: input line
    2      | line

    3 $@1: /* empty */

    4 line: commande $@1 liste EOI EOL
    5     | definition EOI EOL
    6     | affectation EOI EOL
    7     | error EOI EOL
    8     | EOL

    9 definition: VAR_COOR list_coor
   10           | VAR_PT list_pt
   11           | VAR_LIST list_list

   12 list_coor: list_coor ',' VAR_NAME_COOR
   13          | VAR_NAME_COOR
   14          | VARERROR

   15 list_pt: list_pt ',' VAR_NAME_PT
   16        | VAR_NAME_PT

   17 list_list: list_list ',' VAR_NAME_LIST
   18          | VAR_NAME_LIST

   19 affectation: VAR_NAME_COOR '=' expr

   20 $@2: /* empty */

   21 affectation: VAR_NAME_PT $@2 '=' point

   22 $@3: /* empty */

   23 affectation: VAR_NAME_LIST $@3 '=' liste

   24 commande: DRAW
   25         | FILL
   26         | error

   27 liste: point
   28      | '+' translation
   29      | cycle

   30 $@4: /* empty */

   31 liste: point $@4 SEPARATOR liste
   32      | '+' translation SEPARATOR liste
   33      | cycle SEPARATOR liste
   34      | VAR_NAME_LIST

   35 point: '(' expr ',' expr ')'
   36      | VAR_NAME_PT
   37      | '(' expr ':' expr ')'

   38 cycle: CYCLE

   39 translation: '(' expr ',' expr ')'

   40 expr: expr '+' expr
   41     | expr '*' expr
   42     | expr '-' expr
   43     | expr '/' expr
   44     | NB
   45     | '(' expr ')'
   46     | '-' expr
   47     | VAR_NAME_COOR


Terminals, with rules where they appear

$end (0) 0
'(' (40) 35 37 39 45
')' (41) 35 37 39 45
'*' (42) 41
'+' (43) 28 32 40
',' (44) 12 15 17 35 39
'-' (45) 42 46
'/' (47) 43
':' (58) 37
'=' (61) 19 21 23
error (256) 7 26
NB (258) 44
VARERROR (259) 14
SET_COLOR (260)
DRAW (261) 24
FILL (262) 25
CYCLE (263) 38
SEPARATOR (264) 31 32 33
EOI (265) 4 5 6 7
EOL (266) 4 5 6 7 8
VAR_COOR (267) 9
VAR_PT (268) 10
VAR_LIST (269) 11
VAR_NAME_COOR (270) 12 13 19 47
VAR_NAME_PT (271) 15 16 21 36
VAR_NAME_LIST (272) 17 18 23 34
UMINUS (273)


Nonterminals, with rules where they appear

$accept (28)
    on left: 0
input (29)
    on left: 1 2, on right: 0 1
line (30)
    on left: 4 5 6 7 8, on right: 1 2
$@1 (31)
    on left: 3, on right: 4
definition (32)
    on left: 9 10 11, on right: 5
list_coor (33)
    on left: 12 13 14, on right: 9 12
list_pt (34)
    on left: 15 16, on right: 10 15
list_list (35)
    on left: 17 18, on right: 11 17
affectation (36)
    on left: 19 21 23, on right: 6
$@2 (37)
    on left: 20, on right: 21
$@3 (38)
    on left: 22, on right: 23
commande (39)
    on left: 24 25 26, on right: 4
liste (40)
    on left: 27 28 29 31 32 33 34, on right: 4 23 31 32 33
$@4 (41)
    on left: 30, on right: 31
point (42)
    on left: 35 36 37, on right: 21 27 31
cycle (43)
    on left: 38, on right: 29 33
translation (44)
    on left: 39, on right: 28 32
expr (45)
    on left: 40 41 42 43 44 45 46 47, on right: 19 35 37 39 40 41 42
    43 45 46


state 0

    0 $accept: . input $end

    error          shift, and go to state 1
    DRAW           shift, and go to state 2
    FILL           shift, and go to state 3
    EOL            shift, and go to state 4
    VAR_COOR       shift, and go to state 5
    VAR_PT         shift, and go to state 6
    VAR_LIST       shift, and go to state 7
    VAR_NAME_COOR  shift, and go to state 8
    VAR_NAME_PT    shift, and go to state 9
    VAR_NAME_LIST  shift, and go to state 10

    input        go to state 11
    line         go to state 12
    definition   go to state 13
    affectation  go to state 14
    commande     go to state 15


state 1

    7 line: error . EOI EOL
   26 commande: error .

    EOI  shift, and go to state 16

    $default  reduce using rule 26 (commande)


state 2

   24 commande: DRAW .

    $default  reduce using rule 24 (commande)


state 3

   25 commande: FILL .

    $default  reduce using rule 25 (commande)


state 4

    8 line: EOL .

    $default  reduce using rule 8 (line)


state 5

    9 definition: VAR_COOR . list_coor

    VARERROR       shift, and go to state 17
    VAR_NAME_COOR  shift, and go to state 18

    list_coor  go to state 19


state 6

   10 definition: VAR_PT . list_pt

    VAR_NAME_PT  shift, and go to state 20

    list_pt  go to state 21


state 7

   11 definition: VAR_LIST . list_list

    VAR_NAME_LIST  shift, and go to state 22

    list_list  go to state 23


state 8

   19 affectation: VAR_NAME_COOR . '=' expr

    '='  shift, and go to state 24


state 9

   21 affectation: VAR_NAME_PT . $@2 '=' point

    $default  reduce using rule 20 ($@2)

    $@2  go to state 25


state 10

   23 affectation: VAR_NAME_LIST . $@3 '=' liste

    $default  reduce using rule 22 ($@3)

    $@3  go to state 26


state 11

    0 $accept: input . $end
    1 input: input . line

    $end           shift, and go to state 27
    error          shift, and go to state 1
    DRAW           shift, and go to state 2
    FILL           shift, and go to state 3
    EOL            shift, and go to state 4
    VAR_COOR       shift, and go to state 5
    VAR_PT         shift, and go to state 6
    VAR_LIST       shift, and go to state 7
    VAR_NAME_COOR  shift, and go to state 8
    VAR_NAME_PT    shift, and go to state 9
    VAR_NAME_LIST  shift, and go to state 10

    line         go to state 28
    definition   go to state 13
    affectation  go to state 14
    commande     go to state 15


state 12

    2 input: line .

    $default  reduce using rule 2 (input)


state 13

    5 line: definition . EOI EOL

    EOI  shift, and go to state 29


state 14

    6 line: affectation . EOI EOL

    EOI  shift, and go to state 30


state 15

    4 line: commande . $@1 liste EOI EOL

    $default  reduce using rule 3 ($@1)

    $@1  go to state 31


state 16

    7 line: error EOI . EOL

    EOL  shift, and go to state 32


state 17

   14 list_coor: VARERROR .

    $default  reduce using rule 14 (list_coor)


state 18

   13 list_coor: VAR_NAME_COOR .

    $default  reduce using rule 13 (list_coor)


state 19

    9 definition: VAR_COOR list_coor .
   12 list_coor: list_coor . ',' VAR_NAME_COOR

    ','  shift, and go to state 33

    $default  reduce using rule 9 (definition)


state 20

   16 list_pt: VAR_NAME_PT .

    $default  reduce using rule 16 (list_pt)


state 21

   10 definition: VAR_PT list_pt .
   15 list_pt: list_pt . ',' VAR_NAME_PT

    ','  shift, and go to state 34

    $default  reduce using rule 10 (definition)


state 22

   18 list_list: VAR_NAME_LIST .

    $default  reduce using rule 18 (list_list)


state 23

   11 definition: VAR_LIST list_list .
   17 list_list: list_list . ',' VAR_NAME_LIST

    ','  shift, and go to state 35

    $default  reduce using rule 11 (definition)


state 24

   19 affectation: VAR_NAME_COOR '=' . expr

    NB             shift, and go to state 36
    VAR_NAME_COOR  shift, and go to state 37
    '-'            shift, and go to state 38
    '('            shift, and go to state 39

    expr  go to state 40


state 25

   21 affectation: VAR_NAME_PT $@2 . '=' point

    '='  shift, and go to state 41


state 26

   23 affectation: VAR_NAME_LIST $@3 . '=' liste

    '='  shift, and go to state 42


state 27

    0 $accept: input $end .

    $default  accept


state 28

    1 input: input line .

    $default  reduce using rule 1 (input)


state 29

    5 line: definition EOI . EOL

    EOL  shift, and go to state 43


state 30

    6 line: affectation EOI . EOL

    EOL  shift, and go to state 44


state 31

    4 line: commande $@1 . liste EOI EOL

    CYCLE          shift, and go to state 45
    VAR_NAME_PT    shift, and go to state 46
    VAR_NAME_LIST  shift, and go to state 47
    '+'            shift, and go to state 48
    '('            shift, and go to state 49

    liste  go to state 50
    point  go to state 51
    cycle  go to state 52


state 32

    7 line: error EOI EOL .

    $default  reduce using rule 7 (line)


state 33

   12 list_coor: list_coor ',' . VAR_NAME_COOR

    VAR_NAME_COOR  shift, and go to state 53


state 34

   15 list_pt: list_pt ',' . VAR_NAME_PT

    VAR_NAME_PT  shift, and go to state 54


state 35

   17 list_list: list_list ',' . VAR_NAME_LIST

    VAR_NAME_LIST  shift, and go to state 55


state 36

   44 expr: NB .

    $default  reduce using rule 44 (expr)


state 37

   47 expr: VAR_NAME_COOR .

    $default  reduce using rule 47 (expr)


state 38

   46 expr: '-' . expr

    NB             shift, and go to state 36
    VAR_NAME_COOR  shift, and go to state 37
    '-'            shift, and go to state 38
    '('            shift, and go to state 39

    expr  go to state 56


state 39

   45 expr: '(' . expr ')'

    NB             shift, and go to state 36
    VAR_NAME_COOR  shift, and go to state 37
    '-'            shift, and go to state 38
    '('            shift, and go to state 39

    expr  go to state 57


state 40

   19 affectation: VAR_NAME_COOR '=' expr .
   40 expr: expr . '+' expr
   41     | expr . '*' expr
   42     | expr . '-' expr
   43     | expr . '/' expr

    '+'  shift, and go to state 58
    '-'  shift, and go to state 59
    '*'  shift, and go to state 60
    '/'  shift, and go to state 61

    $default  reduce using rule 19 (affectation)


state 41

   21 affectation: VAR_NAME_PT $@2 '=' . point

    VAR_NAME_PT  shift, and go to state 46
    '('          shift, and go to state 49

    point  go to state 62


state 42

   23 affectation: VAR_NAME_LIST $@3 '=' . liste

    CYCLE          shift, and go to state 45
    VAR_NAME_PT    shift, and go to state 46
    VAR_NAME_LIST  shift, and go to state 47
    '+'            shift, and go to state 48
    '('            shift, and go to state 49

    liste  go to state 63
    point  go to state 51
    cycle  go to state 52


state 43

    5 line: definition EOI EOL .

    $default  reduce using rule 5 (line)


state 44

    6 line: affectation EOI EOL .

    $default  reduce using rule 6 (line)


state 45

   38 cycle: CYCLE .

    $default  reduce using rule 38 (cycle)


state 46

   36 point: VAR_NAME_PT .

    $default  reduce using rule 36 (point)


state 47

   34 liste: VAR_NAME_LIST .

    $default  reduce using rule 34 (liste)


state 48

   28 liste: '+' . translation
   32      | '+' . translation SEPARATOR liste

    '('  shift, and go to state 64

    translation  go to state 65


state 49

   35 point: '(' . expr ',' expr ')'
   37      | '(' . expr ':' expr ')'

    NB             shift, and go to state 36
    VAR_NAME_COOR  shift, and go to state 37
    '-'            shift, and go to state 38
    '('            shift, and go to state 39

    expr  go to state 66


state 50

    4 line: commande $@1 liste . EOI EOL

    EOI  shift, and go to state 67


state 51

   27 liste: point .
   31      | point . $@4 SEPARATOR liste

    SEPARATOR  reduce using rule 30 ($@4)
    $default   reduce using rule 27 (liste)

    $@4  go to state 68


state 52

   29 liste: cycle .
   33      | cycle . SEPARATOR liste

    SEPARATOR  shift, and go to state 69

    $default  reduce using rule 29 (liste)


state 53

   12 list_coor: list_coor ',' VAR_NAME_COOR .

    $default  reduce using rule 12 (list_coor)


state 54

   15 list_pt: list_pt ',' VAR_NAME_PT .

    $default  reduce using rule 15 (list_pt)


state 55

   17 list_list: list_list ',' VAR_NAME_LIST .

    $default  reduce using rule 17 (list_list)


state 56

   40 expr: expr . '+' expr
   41     | expr . '*' expr
   42     | expr . '-' expr
   43     | expr . '/' expr
   46     | '-' expr .

    $default  reduce using rule 46 (expr)


state 57

   40 expr: expr . '+' expr
   41     | expr . '*' expr
   42     | expr . '-' expr
   43     | expr . '/' expr
   45     | '(' expr . ')'

    '+'  shift, and go to state 58
    '-'  shift, and go to state 59
    '*'  shift, and go to state 60
    '/'  shift, and go to state 61
    ')'  shift, and go to state 70


state 58

   40 expr: expr '+' . expr

    NB             shift, and go to state 36
    VAR_NAME_COOR  shift, and go to state 37
    '-'            shift, and go to state 38
    '('            shift, and go to state 39

    expr  go to state 71


state 59

   42 expr: expr '-' . expr

    NB             shift, and go to state 36
    VAR_NAME_COOR  shift, and go to state 37
    '-'            shift, and go to state 38
    '('            shift, and go to state 39

    expr  go to state 72


state 60

   41 expr: expr '*' . expr

    NB             shift, and go to state 36
    VAR_NAME_COOR  shift, and go to state 37
    '-'            shift, and go to state 38
    '('            shift, and go to state 39

    expr  go to state 73


state 61

   43 expr: expr '/' . expr

    NB             shift, and go to state 36
    VAR_NAME_COOR  shift, and go to state 37
    '-'            shift, and go to state 38
    '('            shift, and go to state 39

    expr  go to state 74


state 62

   21 affectation: VAR_NAME_PT $@2 '=' point .

    $default  reduce using rule 21 (affectation)


state 63

   23 affectation: VAR_NAME_LIST $@3 '=' liste .

    $default  reduce using rule 23 (affectation)


state 64

   39 translation: '(' . expr ',' expr ')'

    NB             shift, and go to state 36
    VAR_NAME_COOR  shift, and go to state 37
    '-'            shift, and go to state 38
    '('            shift, and go to state 39

    expr  go to state 75


state 65

   28 liste: '+' translation .
   32      | '+' translation . SEPARATOR liste

    SEPARATOR  shift, and go to state 76

    $default  reduce using rule 28 (liste)


state 66

   35 point: '(' expr . ',' expr ')'
   37      | '(' expr . ':' expr ')'
   40 expr: expr . '+' expr
   41     | expr . '*' expr
   42     | expr . '-' expr
   43     | expr . '/' expr

    '+'  shift, and go to state 58
    '-'  shift, and go to state 59
    '*'  shift, and go to state 60
    '/'  shift, and go to state 61
    ','  shift, and go to state 77
    ':'  shift, and go to state 78


state 67

    4 line: commande $@1 liste EOI . EOL

    EOL  shift, and go to state 79


state 68

   31 liste: point $@4 . SEPARATOR liste

    SEPARATOR  shift, and go to state 80


state 69

   33 liste: cycle SEPARATOR . liste

    CYCLE          shift, and go to state 45
    VAR_NAME_PT    shift, and go to state 46
    VAR_NAME_LIST  shift, and go to state 47
    '+'            shift, and go to state 48
    '('            shift, and go to state 49

    liste  go to state 81
    point  go to state 51
    cycle  go to state 52


state 70

   45 expr: '(' expr ')' .

    $default  reduce using rule 45 (expr)


state 71

   40 expr: expr . '+' expr
   40     | expr '+' expr .
   41     | expr . '*' expr
   42     | expr . '-' expr
   43     | expr . '/' expr

    '*'  shift, and go to state 60
    '/'  shift, and go to state 61

    $default  reduce using rule 40 (expr)


state 72

   40 expr: expr . '+' expr
   41     | expr . '*' expr
   42     | expr . '-' expr
   42     | expr '-' expr .
   43     | expr . '/' expr

    '*'  shift, and go to state 60
    '/'  shift, and go to state 61

    $default  reduce using rule 42 (expr)


state 73

   40 expr: expr . '+' expr
   41     | expr . '*' expr
   41     | expr '*' expr .
   42     | expr . '-' expr
   43     | expr . '/' expr

    $default  reduce using rule 41 (expr)


state 74

   40 expr: expr . '+' expr
   41     | expr . '*' expr
   42     | expr . '-' expr
   43     | expr . '/' expr
   43     | expr '/' expr .

    $default  reduce using rule 43 (expr)


state 75

   39 translation: '(' expr . ',' expr ')'
   40 expr: expr . '+' expr
   41     | expr . '*' expr
   42     | expr . '-' expr
   43     | expr . '/' expr

    '+'  shift, and go to state 58
    '-'  shift, and go to state 59
    '*'  shift, and go to state 60
    '/'  shift, and go to state 61
    ','  shift, and go to state 82


state 76

   32 liste: '+' translation SEPARATOR . liste

    CYCLE          shift, and go to state 45
    VAR_NAME_PT    shift, and go to state 46
    VAR_NAME_LIST  shift, and go to state 47
    '+'            shift, and go to state 48
    '('            shift, and go to state 49

    liste  go to state 83
    point  go to state 51
    cycle  go to state 52


state 77

   35 point: '(' expr ',' . expr ')'

    NB             shift, and go to state 36
    VAR_NAME_COOR  shift, and go to state 37
    '-'            shift, and go to state 38
    '('            shift, and go to state 39

    expr  go to state 84


state 78

   37 point: '(' expr ':' . expr ')'

    NB             shift, and go to state 36
    VAR_NAME_COOR  shift, and go to state 37
    '-'            shift, and go to state 38
    '('            shift, and go to state 39

    expr  go to state 85


state 79

    4 line: commande $@1 liste EOI EOL .

    $default  reduce using rule 4 (line)


state 80

   31 liste: point $@4 SEPARATOR . liste

    CYCLE          shift, and go to state 45
    VAR_NAME_PT    shift, and go to state 46
    VAR_NAME_LIST  shift, and go to state 47
    '+'            shift, and go to state 48
    '('            shift, and go to state 49

    liste  go to state 86
    point  go to state 51
    cycle  go to state 52


state 81

   33 liste: cycle SEPARATOR liste .

    $default  reduce using rule 33 (liste)


state 82

   39 translation: '(' expr ',' . expr ')'

    NB             shift, and go to state 36
    VAR_NAME_COOR  shift, and go to state 37
    '-'            shift, and go to state 38
    '('            shift, and go to state 39

    expr  go to state 87


state 83

   32 liste: '+' translation SEPARATOR liste .

    $default  reduce using rule 32 (liste)


state 84

   35 point: '(' expr ',' expr . ')'
   40 expr: expr . '+' expr
   41     | expr . '*' expr
   42     | expr . '-' expr
   43     | expr . '/' expr

    '+'  shift, and go to state 58
    '-'  shift, and go to state 59
    '*'  shift, and go to state 60
    '/'  shift, and go to state 61
    ')'  shift, and go to state 88


state 85

   37 point: '(' expr ':' expr . ')'
   40 expr: expr . '+' expr
   41     | expr . '*' expr
   42     | expr . '-' expr
   43     | expr . '/' expr

    '+'  shift, and go to state 58
    '-'  shift, and go to state 59
    '*'  shift, and go to state 60
    '/'  shift, and go to state 61
    ')'  shift, and go to state 89


state 86

   31 liste: point $@4 SEPARATOR liste .

    $default  reduce using rule 31 (liste)


state 87

   39 translation: '(' expr ',' expr . ')'
   40 expr: expr . '+' expr
   41     | expr . '*' expr
   42     | expr . '-' expr
   43     | expr . '/' expr

    '+'  shift, and go to state 58
    '-'  shift, and go to state 59
    '*'  shift, and go to state 60
    '/'  shift, and go to state 61
    ')'  shift, and go to state 90


state 88

   35 point: '(' expr ',' expr ')' .

    $default  reduce using rule 35 (point)


state 89

   37 point: '(' expr ':' expr ')' .

    $default  reduce using rule 37 (point)


state 90

   39 translation: '(' expr ',' expr ')' .

    $default  reduce using rule 39 (translation)
